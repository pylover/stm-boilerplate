set (CMAKE_SYSTEM_NAME "Generic" CACHE STRING "")
set (CMAKE_SYSTEM_PROCESSOR "arm" CACHE STRING "")

set(CMAKE_C_STANDARD 11)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_C_EXTENSIONS ON)


# Skip link step during toolchain validation.
set (CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)


# cross compiler
set (CMAKE_CROSSCOMPILING True)
set (CMAKE_C_COMPILER_FORCED TRUE)
set (CMAKE_CXX_COMPILER_FORCED TRUE)
set (CMAKE_C_COMPILER_ID GNU)
set (CMAKE_CXX_COMPILER_ID GNU)


# some default GCC settings
# arm-none-eabi- must be part of path environment
set (TOOLCHAIN_PREFIX   "arm-none-eabi-")
set (CMAKE_C_COMPILER   "${TOOLCHAIN_PREFIX}gcc")
set (CMAKE_ASM_COMPILER "${TOOLCHAIN_PREFIX}gcc")
set (CMAKE_CXX_COMPILER "${TOOLCHAIN_PREFIX}g++")
set (CMAKE_AR           "${TOOLCHAIN_PREFIX}ar")
set (CMAKE_LINKER       "${TOOLCHAIN_PREFIX}g++")
set (CMAKE_OBJCOPY      "${TOOLCHAIN_PREFIX}objcopy")
set (CMAKE_RANLIB       "${TOOLCHAIN_PREFIX}ranlib")
set (CMAKE_SIZE         "${TOOLCHAIN_PREFIX}size")
set (CMAKE_STRIP        "${TOOLCHAIN_PREFIX}ld")


# executable suffixes
set (CMAKE_EXECUTABLE_SUFFIX     ".elf")
set (CMAKE_EXECUTABLE_SUFFIX_ASM ".elf")
set (CMAKE_EXECUTABLE_SUFFIX_C   ".elf")
set (CMAKE_EXECUTABLE_SUFFIX_CXX ".elf")
set (CMAKE_STATIC_LIBRARY_SUFFIX ".a")


# control programs, includes and library lookup
# set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
# set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
# set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
